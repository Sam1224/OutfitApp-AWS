#-----------------------------
# ベースイメージ
#-----------------------------
# CUDA 10.0 for Debian
FROM nvidia/cuda:10.0-cudnn7-devel

#-----------------------------
# 基本ライブラリのインストール
#-----------------------------
# インストール時のキー入力待ちをなくす環境変数
ENV DEBIAN_FRONTEND noninteractive

RUN set -x && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-dev \
    python3-pip \
    sudo \
    git \
    wget \
    curl \
    bzip2 \
    make \
    libprotobuf-dev \
    protobuf-compiler \
    libgoogle-glog-dev \
    libboost-all-dev \
    libcaffe-cuda-dev \
    libhdf5-dev \
    libatlas-base-dev \
    libopencv-dev \
    # imageのサイズを小さくするためにキャッシュ削除
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install -U numpy opencv-python 

# cmake のインストール（replace cmake as old version has CUDA variable bugs）
RUN wget https://github.com/Kitware/CMake/releases/download/v3.16.0/cmake-3.16.0-Linux-x86_64.tar.gz && \
    tar xzf cmake-3.16.0-Linux-x86_64.tar.gz -C /opt && \
    rm cmake-3.16.0-Linux-x86_64.tar.gz

ENV PATH="/opt/cmake-3.16.0-Linux-x86_64/bin:${PATH}"

#-----------------------------
# 環境変数
#-----------------------------
ENV LC_ALL=C.UTF-8
ENV export LANG=C.UTF-8

ARG USER_NAME=ubuntu
ARG USER_ID=1000
ARG GROUP_NAME=sudo
ENV HOME=/home/${USER_NAME}
ARG WORK_DIR=${HOME}/share/openpose_wrapper

#-----------------------------
# openpose のインストール
#-----------------------------
WORKDIR /openpose_gpu
RUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git .

WORKDIR /openpose_gpu/build
RUN cmake \
    -DBUILD_PYTHON=ON \
    -DDOWNLOAD_BODY_MPI_MODEL:Bool=ON \
    -DDOWNLOAD_BODY_COCO_MODEL:Bool=ON \
    -DDOWNLOAD_FACE_MODEL:Bool=ON \
    -DDOWNLOAD_HAND_MODEL:Bool=ON \
    ..

RUN make -j `nproc`   
#RUN make -j nproc

WORKDIR /openpose_gpu/build/python/openpose
RUN cp pyopenpose.cpython-36m-x86_64-linux-gnu.so /usr/local/lib/python3.6/dist-packages

# pyopenpose 使用のための設定
WORKDIR /usr/local/lib/python3.6/dist-packages
RUN ln -s pyopenpose.cpython-36m-x86_64-linux-gnu.so pyopenpose

#-----------------------------
# 追加ライブラリのインストール
#-----------------------------
RUN pip3 install -U flask
RUN pip3 install -U flask_cors
RUN pip3 install -U requests
RUN pip3 install -U gunicorn
RUN pip3 install -U pillow
RUN pip3 install -U tqdm
RUN pip3 install -U numpy

#-----------------------------
# ユーザーの追加
#-----------------------------
RUN useradd --create-home --uid ${USER_ID} --groups ${GROUP_NAME} --home-dir ${HOME} --shell /bin/bash ${USER_NAME}

# ディレクトリの所有権を設定： sudo グループの設定
RUN chown -R ${USER_NAME}:${GROUP_NAME} ${HOME}
RUN echo "${USER_NAME} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-user

# user に sudo 権限を付与
#RUN sudo gpasswd -a ${USER_NAME} sudo

# ディレクトリのアクセス権を設定：全アクセスを許可
RUN chmod 777 ${HOME}

# 指定ユーザーに切り替え
USER ${USER_NAME}

#-----------------------------
# コンテナ起動後の作業ディレクトリ
#-----------------------------
WORKDIR ${WORK_DIR}

# ビルドした openpose を workdir にコピー
RUN sudo cp -r /openpose_gpu .

# Python API のパス
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/
#ENV PYTHONPATH=$PYTHONPATH:/usr/local/python
#ENV PYTHONPATH=$PYTHONPATH:/usr/local/python/openpose
#ENV PYTHONPATH=$PYTHONPATH:/openpose/build/python/openpose

ENV PYTHONPATH=$PYTHONPATH:${WORK_DIR}/openpose/build/python
#ENV PYTHONPATH=$PYTHONPATH:${WORK_DIR}/openpose/build/python/openpose
